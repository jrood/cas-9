import{computed,effect,setCurrentSub}from"alien-signals";const twoWay=new Set([`value`,`checked`]);export function jsx(e,a){if(e instanceof Function){let n=setCurrentSub(void 0),i=e(a);return setCurrentSub(n),i}let o=document.createElement(e),s=[];for(let e in a){let r=a[e];e===`children`?s=r:e.startsWith(`on`)&&e[2]==e[2].toUpperCase()?o.addEventListener(e.slice(2).toLowerCase(),r):r instanceof Function?twoWay.has(e)?(effect(()=>o[e]=r()),o.addEventListener(`input`,()=>r(o[e]))):effect(()=>o.setAttribute(e,r())):twoWay.has(e)?o[e]=r:o.setAttribute(e,r)}return render(s,o),o}export{jsx as jsxDEV,jsx as jsxs,jsx as jsxsDEV};export const Fragment=e=>e.children;export function render(r,i){let a=[r].flat(9).map(n=>n instanceof Function?computed(()=>n()):n);effect(()=>{let e=[];if(pushNodes(a,e),!e.length||!i.childNodes.length)return i.replaceChildren(...e);let n=new Set(e);for(let e of Array.from(i.childNodes))n.has(e)||e.remove();for(let n=0;n<e.length;n++){let r=i.childNodes[n];if(!r){i.append(...e.slice(n));break}r!==e[n]&&i.insertBefore(e[n],r)}})}function pushNodes(e,n){if(e instanceof Node)n.push(e);else if(Array.isArray(e))for(let r of e.flat(9))pushNodes(r,n);else e instanceof Function?pushNodes(e(),n):e!=null&&e!==!1&&n.push(document.createTextNode(`${e}`))}