import{computed,effect,setCurrentSub}from"alien-signals";const inputValue=new Set([`value`,`checked`]);export function jsx(e,o){if(e instanceof Function){let r=setCurrentSub(void 0),a=e(o);return setCurrentSub(r),a}let s=document.createElement(e),c=[];for(let e in o){let i=o[e];e===`children`?c=i:e.startsWith(`on`)&&e[2]==e[2].toUpperCase()?s.addEventListener(e.slice(2).toLowerCase(),i):i instanceof Function?(effect(()=>{setAttrOrProp(s,e,i())}),inputValue.has(e)&&s.addEventListener(`input`,()=>i(s[e]))):setAttrOrProp(s,e,i)}return render(c,s),s}function setAttrOrProp(e,r,i){inputValue.has(r)||typeof e[r]==`boolean`?e[r]=i:e.setAttribute(r,i)}export{jsx as jsxDEV,jsx as jsxs,jsx as jsxsDEV};export const Fragment=e=>e.children;export function render(i,a){let o=[i].flat(9).map(r=>r instanceof Function?computed(()=>r()):r);effect(()=>{let e=[];if(pushNodes(o,e),!e.length||!a.childNodes.length)return a.replaceChildren(...e);let r=new Set(e);for(let e of Array.from(a.childNodes))r.has(e)||e.remove();for(let r=0;r<e.length;r++){let i=a.childNodes[r];if(!i){a.append(...e.slice(r));break}i!==e[r]&&a.insertBefore(e[r],i)}})}function pushNodes(e,r){if(e instanceof Node)r.push(e);else if(Array.isArray(e))for(let i of e.flat(9))pushNodes(i,r);else e instanceof Function?pushNodes(e(),r):e!=null&&e!==!1&&r.push(document.createTextNode(`${e}`))}