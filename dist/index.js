import{computed,effect,setCurrentSub}from"alien-signals";export function jsx(e,i){if(e instanceof Function){let n=setCurrentSub(void 0),a=e(i);return setCurrentSub(n),a}let a=document.createElement(e),o=[];for(let e in i){let r=i[e];e===`children`?o=r:e.startsWith(`on`)&&e[2]==e[2].toUpperCase()?a.addEventListener(e.slice(2).toLowerCase(),r):r instanceof Function?effect(()=>a.setAttribute(e,r())):a.setAttribute(e,r)}return render(o,a),a}export{jsx as jsxDEV,jsx as jsxs,jsx as jsxsDEV};export const Fragment=e=>e.children;export function render(r,i){let a=[r].flat(9).map(n=>n instanceof Function?computed(()=>n()):n);effect(()=>{let e=[];if(pushNodes(a,e),!e.length||!i.childNodes.length)return i.replaceChildren(...e);let n=new Set(e);for(let e of Array.from(i.childNodes))n.has(e)||e.remove();for(let n=0;n<e.length;n++){let r=i.childNodes[n];if(!r){i.append(...e.slice(n));break}r!==e[n]&&i.insertBefore(e[n],r)}})}function pushNodes(e,n){if(e instanceof Node)n.push(e);else if(Array.isArray(e))for(let r of e.flat(9))pushNodes(r,n);else e instanceof Function?pushNodes(e(),n):e!=null&&e!==!1&&n.push(document.createTextNode(`${e}`))}